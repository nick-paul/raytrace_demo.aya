require ".vecutils" *

class camera

    def camera::__init__ {
            lookfrom::vec_t
            lookat::vec_t
            vup::vec_t
            fov::num
            aspect_ratio::num
            aperture::num
            focus_dist::num
            self 
            : theta h
            unit_vector^
            deg_to_rad^
            cross^
            ,

        aspect_ratio self.:aspect_ratio;
        focus_dist   self.:focus_dist;

        fov deg_to_rad :theta;
        theta 2 / Mt :h;
        2 h * self.:viewport_height;
        self.aspect_ratio self.viewport_height * self.:viewport_width;

        lookfrom lookat - unit_vector self.:w;
        vup self.w cross  unit_vector self.:u;
        self.w self.u cross self.:v;

        lookfrom self.:origin;

        self.viewport_width  self.u * self.focus_dist * self.:horizontal;
        self.viewport_height self.v * self.focus_dist * self.:vertical;

        self.origin (self.horizontal 2 /) - (self.vertical 2 /) - (self.focus_dist self.w *) -
        self.:lower_left_corner;

        aperture 2 / self.:lens_radius;
    }

    def camera::get_ray {s::num t::num self : rd offset random_in_unit_disk^ ray^,
        self.lens_radius random_in_unit_disk * :rd;
        self.u rd.x * self.v rd.y * + :offset;

        self.origin offset +
        self.lower_left_corner (self.horizontal s *) + (self.vertical t *) + self.origin - offset -
        ray!
    }



